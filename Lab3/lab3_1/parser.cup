import java_cup.runtime.*;
import java.io.*;

parser code {:

    public void report_error(String message, Object info) {
        System.err.print("ERROR: Syntax error");
        if (info instanceof Symbol)
            if (((Symbol)info).left != -1) {
                int line = (((Symbol)info).left) + 1;
                int column = (((Symbol)info).right) + 1;
                System.err.print(" (line " + line + ", column " + column + "): ");
            } else System.err.print(": ");
        else System.err.print(": ");
    }

:};

terminal INT, DOUBLE, ID;
terminal PRINT, IF, WHILE, ELSE;
terminal RO, RC, BO, BC, SC, SO, CM, S;
terminal PLUS, MINUS, STAR, DIV;
terminal MIN, MAJ, MIN_EQ, EQ_MIN, MAJ_EQ, EQ_MAJ, EQ;
terminal AND, OR, NOT;
terminal INT_TYPE, DOUBLE_TYPE;
terminal UMINUS;

non terminal prog, stmt_list, stmt, if, while, assignment, print;
non terminal expr;
non terminal mineq, majeq;
non terminal decl_list, decl, var_list, var;
non terminal type, array;
non terminal if_condition, while_condition;
non terminal id;

precedence left OR;
precedence left AND;
precedence left NOT;
precedence left MIN, MAJ, MIN_EQ, EQ_MIN, MAJ_EQ, EQ_MAJ, EQ;
precedence left PLUS, MINUS;
precedence left STAR, DIV;
precedence left UMINUS;

start with prog;

prog ::= decl_list stmt_list {: System.out.println("Programm correctly recognised"); :};

decl_list ::= decl_list decl | ;
decl ::= type var_list S;
type ::= INT_TYPE | DOUBLE_TYPE;
var_list ::= var | var_list CM var;
var ::= ID array;
array ::= | array SO INT SC;

stmt_list ::= stmt_list stmt | stmt;
stmt ::= if | while | assignment | print | BO stmt_list BC;

assignment ::= id S | id EQ expr S;

print ::= PRINT id S;

if ::= IF if_condition stmt ELSE stmt | IF if_condition stmt;
if_condition ::= RO expr RC;

while ::= WHILE while_condition stmt;
while_condition ::= RO expr RC;

expr ::= 
	expr AND expr | expr OR expr | NOT expr |
	expr EQ EQ expr | expr MIN expr | expr MAJ expr | expr mineq expr | expr majeq expr |
	expr PLUS expr | expr MINUS expr | expr STAR expr | expr DIV expr |
	RO expr RC | id | INT | DOUBLE | MINUS INT %prec UMINUS | MINUS DOUBLE %prec UMINUS;

mineq ::= MIN_EQ | EQ_MIN;
majeq ::= MAJ_EQ | EQ_MAJ;

id ::= ID | ID SO INT SC | ID SO ID SC;
